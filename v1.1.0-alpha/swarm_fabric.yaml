# This compose file will start a Hyperledger Fabric 1.0 MVE, including
# * 4 ca 
# * 1 orderer with 4 kafka nodes and 3 zookeeper nodes
# * 4 orgs with 2 peers each
# * cli for testing and interacting 
#
# We use Docker Swarm to deploy and manage Hyperledger Fabric Network

version: '3.2'


# We use an external network : docker network create --driver overlay --attachable fabric
networks:
  fabric:
    external:
      name: fabric


services:
# CA services, at least one CA per organization 
  ca_org1_example_com:
    image: yeasy/hyperledger-fabric-ca:1.1.0-alpha
    restart: always
    hostname: ca.org1.example.com
    environment:
      - FABRIC_CA_VERSION=1.1.0
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_TLS_ENABLED=true 
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/d821ea9fceb2b4e4b01fc4a671c5cce58615cf9f03b53e6b365d5f27054acbf0_sk # to change if keyfiles change
    networks:
      fabric:
        aliases:
          - ca.org1.example.com 
    command: > 
             sh -c ' mkdir -p /etc/hyperledger/fabric-ca-server-config ; wget -r --no-parent -nH --cut-dirs=4 ftp://10.0.0.242/crypto-config/peerOrganizations/org1.example.com/ca -P /etc/hyperledger/fabric-ca-server-config &&
             fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/d821ea9fceb2b4e4b01fc4a671c5cce58615cf9f03b53e6b365d5f27054acbf0_sk -b admin:adminpw -d'
    deploy:
      placement:
        constraints: [node.hostname ==multivac]


  ca_org2_example_com:
    image: yeasy/hyperledger-fabric-ca:1.1.0-alpha
    restart: always
    hostname: ca.org2.example.com
    environment:
      - FABRIC_CA_VERSION=1.1.0
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_TLS_ENABLED=true 
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/011c1aaeaba837dc1bc404854359f495b48394f4ee70c58295c97299e8d46552_sk # to change if keyfiles change
    networks:
      fabric:
        aliases:
          - ca.org2.example.com
    command: > 
             sh -c ' mkdir -p /etc/hyperledger/fabric-ca-server-config ; wget -r --no-parent -nH --cut-dirs=4 ftp://10.0.0.242/crypto-config/peerOrganizations/org2.example.com/ca -P /etc/hyperledger/fabric-ca-server-config &&
             fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/011c1aaeaba837dc1bc404854359f495b48394f4ee70c58295c97299e8d46552_sk -b admin:adminpw -d'
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  ca_org3_example_com:
    image: yeasy/hyperledger-fabric-ca:1.1.0-alpha
    restart: always
    hostname: ca.org3.example.com
    environment:
      - FABRIC_CA_VERSION=1.1.0
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_TLS_ENABLED=true 
      - FABRIC_CA_SERVER_CA_NAME=ca-org3
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org3.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/8e0e45bd79d40a885e7420fb5556ee031726c3f7f715070cfc060e910d3864b8_sk # to change if keyfiles change
    networks:
      fabric:
        aliases:
          - ca.org3.example.com
    command: > 
             sh -c ' mkdir -p /etc/hyperledger/fabric-ca-server-config ; wget -r --no-parent -nH --cut-dirs=4  ftp://10.0.0.242/crypto-config/peerOrganizations/org3.example.com/ca -P /etc/hyperledger/fabric-ca-server-config &&
             fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org3.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/8e0e45bd79d40a885e7420fb5556ee031726c3f7f715070cfc060e910d3864b8_sk -b admin:adminpw -d'
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  ca_org4_example_com:
    image: yeasy/hyperledger-fabric-ca:1.1.0-alpha
    restart: always
    hostname: ca.org3.example.com
    environment:
      - FABRIC_CA_VERSION=1.1.0
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_TLS_ENABLED=true 
      - FABRIC_CA_SERVER_CA_NAME=ca-org4
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org4.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/8f6c760786f4e792e9959dbdd3f7122d2f46911b0f61f102fcec36f482eb2329_sk # to change if keyfiles change
    networks:
      fabric:
        aliases:
          - ca.org3.example.com
    command: > 
             sh -c ' mkdir -p /etc/hyperledger/fabric-ca-server-config ; wget -r --no-parent -nH --cut-dirs=4  ftp://10.0.0.242/crypto-config/peerOrganizations/org4.example.com/ca -P /etc/hyperledger/fabric-ca-server-config &&
             fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org4.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/8f6c760786f4e792e9959dbdd3f7122d2f46911b0f61f102fcec36f482eb2329_sk -b admin:adminpw -d'
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

# ZooKeeper services, at least 3 nodes
  zookeeper0:
    image: hyperledger/fabric-zookeeper:x86_64-0.4.5
    restart: always
    tty: true
    hostname: zookeeper0
    expose:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=0.0.0.0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      fabric:
        aliases:
          - zookeeper0
    deploy:
      placement:
        constraints: [node.hostname ==multivac]

  zookeeper1:
    image: hyperledger/fabric-zookeeper:x86_64-0.4.5
    restart: always
    tty: true
    hostname: zookeeper1
    expose:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      fabric:
        aliases:
          - zookeeper1
    deploy:
      placement:
        constraints: [node.hostname == multivac ] 

  zookeeper2:
    image: hyperledger/fabric-zookeeper:x86_64-0.4.5
    restart: always
    tty: true
    hostname: zookeeper2
    expose:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      fabric:
        aliases:
          - zookeeper2
    deploy:
      placement:
        constraints: [node.hostname ==multivac]


# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka0:
    hostname: kafka0
    image: hyperledger/fabric-kafka:x86_64-0.4.5
    restart: always
    tty: true
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=16000
      - KAFKA_BROKER_ID=0
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      fabric:
        aliases:
          - kafka0
    deploy:
      placement:
        constraints: [node.hostname ==multivac]

  kafka1:
    hostname: kafka1
    image: hyperledger/fabric-kafka:x86_64-0.4.5
    restart: always
    tty: true
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=16000
      - KAFKA_BROKER_ID=1
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      fabric:
        aliases:
          - kafka1
    deploy:
      placement:
        constraints: [node.hostname ==multivac]

  kafka2:
    hostname: kafka2
    image: hyperledger/fabric-kafka:x86_64-0.4.5
    restart: always
    tty: true
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=16000
      - KAFKA_BROKER_ID=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      fabric:
        aliases:
          - kafka2
    deploy:
      placement:
        constraints: [node.hostname == multivac ] 

  kafka3:
    hostname: kafka3
    image: hyperledger/fabric-kafka:x86_64-0.4.5
    restart: always
    tty: true
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 # 1 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=16000
      - KAFKA_BROKER_ID=3
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      fabric:
        aliases:
           - kafka3
    deploy:
      placement:
        constraints: [node.hostname == multivac ] 


  peer0_org1_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer0.org1.example.com
    environment:
      - CORE_VM_ENDPOINT=192.168.73.52:2375
      - FABRIC_CFG_PATH=
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric   
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false 
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x}cd %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
            
    networks:
      fabric:
        aliases:
          - peer0.org1.example.com
    deploy:
      placement:
        constraints: [node.hostname ==multivac] 


  peer1_org1_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer1.org1.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.73.52:2375
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org1.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric 
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer1.org1.example.com
    deploy:
      placement:
        constraints: [node.hostname == multivac] 

  peer0_org2_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer0.org2.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.0.44:2375
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org2.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric   
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c ' rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer0.org2.example.com
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  peer1_org2_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer1.org2.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.0.44:2375
      - CORE_PEER_ID=peer1.org2.example.com
      - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org2.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric  
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer1.org2.example.com
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  peer0_org3_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer0.org3.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.0.44:2375
      - CORE_PEER_ID=peer0.org3.example.com
      - CORE_PEER_ADDRESS=peer0.org3.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org3.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.example.com:7051
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric  
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer0.org3.example.com
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  peer1_org3_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer1.org3.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.0.44:2375
      - CORE_PEER_ID=peer1.org3.example.com
      - CORE_PEER_ADDRESS=peer1.org3.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org3.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org3.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org3.example.com:7051
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric  
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer1.org3.example.com
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  peer0_org4_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer0.org4.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.0.44:2375
      - CORE_PEER_ID=peer0.org4.example.com
      - CORE_PEER_ADDRESS=peer0.org4.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org4.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org4.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org4.example.com:7051
      - CORE_PEER_LOCALMSPID=Org4MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric  
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer0.org4.example.com
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  peer1_org4_example_com:
    image: yeasy/hyperledger-fabric-peer:1.1.0-alpha
    restart: always
    hostname: peer1.org4.example.com
    environment:
      - FABRIC_CFG_PATH=
      - CORE_VM_ENDPOINT=192.168.0.44:2375
      - CORE_PEER_ID=peer1.org4.example.com
      - CORE_PEER_ADDRESS=peer1.org4.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org4.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org4.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org4.example.com:7051
      - CORE_PEER_LOCALMSPID=Org4MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric  
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  
        #- CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_CHIANCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHIANCODE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
    command: > 
             bash -c 'rm -rf /etc/hyperledger/fabric/ ; mkdir -p /etc/hyperledger/fabric/msp ;  mkdir -p /etc/hyperledger/fabric/tls ;  wget -r --no-parent -nH --cut-dirs=6 --level=14 ftp://10.0.0.242/crypto-config/peerOrganizations/org4.example.com/peers/peer1.org4.example.com/msp -P /etc/hyperledger/fabric/msp &&
             wget -r --no-parent -nH --cut-dirs=6 --level=14  ftp://10.0.0.242/crypto-config/peerOrganizations/org4.example.com/peers/peer1.org4.example.com/tls -P /etc/hyperledger/fabric/tls &&  
             peer node start ' 
    networks:
      fabric:
        aliases:
          - peer1.org4.example.com
    deploy:
      placement:
        constraints: [node.hostname ==jmetairie-Precision-Tower-5810] 

  orderer_example_com:  # There  can be multiple orderers
    hostname: orderer.example.com
    image: yeasy/hyperledger-fabric-orderer:1.1.0-alpha
    environment:
      - ORDERER_GENERAL_LOGLEVEL=DEBUG  # default: INFO
      - ORDERER_GENERAL_LOGFORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 # default: 127.0.0.1
      - ORDERER_GENERAL_GENESISMETHOD=file # default: provisional
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP # default: DEFAULT
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_LEDGERTYPE=file
      #- ORDERER_GENERAL_LEDGERTYPE=json  # default: file
      - ORDERER_GENERAL_BATCHTIMEOUT=1s
      - ORDERER_GENERAL_MAXMESSAGECOUNT=10
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_GENERAL_LISTENPORT=7050
     #- ORDERER_RAMLEDGER_HISTORY_SIZE=100  #only useful when use ram ledger
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true # default: false
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      # Kafka related configurations
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
    networks:
      fabric:
        aliases:
          - orderer.example.com
    command: > 
             bash -c 'mkdir -p /etc/hyperledger/fabric ; wget -r --no-parent -nH --cut-dirs=5 ftp://10.0.0.242/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com -P /var/hyperledger/orderer &&
             orderer start'
    deploy:
      placement:
        constraints: [node.hostname ==multivac]  

  cli:
    image: yeasy/hyperledger-fabric:1.1.0-alpha
    hostname: fabric.cli
    tty: true
    environment:
      - FABRIC_CFG_PATH=
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_FORMAT=%{color}[%{id:03x} %{time:01-02 15:04:05.00 MST}] [%{longpkg}] %{callpath} -> %{level:.4s}%{color:reset} %{message}
      - CORE_PEER_TLS_ENABLED=true  # to enable TLS, change to true
      - ORDERER_CA=/etc/hyperledger/fabric/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
      - CORE_PEER_ID=fabric.cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051 # default to operate on peer0.org1
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: > 
             bash -c 'wget -r --no-parent -nH --cut-dirs=1 ftp://10.0.0.242/scripts -P /tmp/scripts &&
             wget -r --no-parent -nH --cut-dirs=2 ftp://10.0.0.242/kafka/channel-artifacts -P /tmp/channel-artifacts &&
             wget -r --no-parent -nH --cut-dirs=1 --level 14 ftp://10.0.0.242/crypto-config -P /etc/hyperledger/fabric/crypto-config &&
             wget -r --no-parent -nH  --cut-dirs=1 ftp://10.0.0.242/examples -P /opt/gopath/src/examples; sleep 1000000000000 '
    networks:
      fabric:
        aliases:
          - fabric.cli
    deploy:
      placement:
        constraints: [node.hostname ==multivac] 

  explorer:
    restart: always
    hostname: explorer
    image: yeasy/blockchain-explorer:0.1.0-preview # Till we have official image
    volumes:
      - ./explorer-artifacts/config.json:/blockchain-explorer/config.json
      - ./crypto-config:/blockchain-explorer/first-network/crypto-config
    command: > 
             bash -c ' sleep 10; node main.js'
    ports:
      - "8080:8080"
    networks:
      fabric:
        aliases:
          - explorer
    deploy:
      placement:
        constraints: [node.hostname == multivac] 

  mysql: # mysql service
    restart: always
    hostname: mysql
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=fabricexplorer
    networks:
      fabric:
        aliases:
          - mysql
    volumes: 
      - /data_hyperledger/fabric/explorer-artifacts:/docker-entrypoint-initdb.d/ 
    deploy:
      placement:
        constraints: [node.hostname == multivac ] 
